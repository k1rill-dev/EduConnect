{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/applications": {
            "post": {
                "description": "Создает новый отклик на вакансию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Создать отклик",
                "parameters": [
                    {
                        "description": "Данные отклика",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateJobApplication"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешно создано",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/applications/{applicationId}": {
            "delete": {
                "description": "Удаляет отклик",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Удалить отклик",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID отклика",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно удалено",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/applications/{applicationId}/status": {
            "put": {
                "description": "Обновляет статус существующего отклика",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Обновить статус отклика",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID отклика",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Новый статус",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно обновлено",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh-tokens": {
            "post": {
                "description": "Обновление access и refresh токенов с использованием валидного refresh токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление Access и Refresh токенов",
                "parameters": [
                    {
                        "description": "RefreshTokens Request",
                        "name": "refreshTokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RefreshTokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Новые access и refresh токены",
                        "schema": {
                            "$ref": "#/definitions/response.RefreshTokensResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный refresh токен или ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-in": {
            "post": {
                "description": "Авторизация пользователя по email и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "signInRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens",
                        "schema": {
                            "$ref": "#/definitions/response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-out": {
            "post": {
                "description": "Завершение сессии пользователя с аннулированием токенов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Выход пользователя",
                "parameters": [
                    {
                        "description": "Данные для выхода",
                        "name": "signOutRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пустой ответ при успешном завершении",
                        "schema": {
                            "$ref": "#/definitions/response.SignOutResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или неверные данные",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-up": {
            "post": {
                "description": "Создаёт нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "signUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens",
                        "schema": {
                            "$ref": "#/definitions/response.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/update-user": {
            "post": {
                "description": "Обновление пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновления пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления",
                        "name": "signInRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/jobs": {
            "post": {
                "description": "Создает новую вакансию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Создать вакансию",
                "parameters": [
                    {
                        "description": "Данные для создания вакансии",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateJobRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешно создано",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/jobs/filter": {
            "post": {
                "description": "Возвращает список вакансий, соответствующих заданным фильтрам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Фильтр вакансий",
                "parameters": [
                    {
                        "description": "Фильтры вакансий",
                        "name": "filters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.JobFilters"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список вакансий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Job"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/jobs/search": {
            "get": {
                "description": "Поиск вакансий по названию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Поиск вакансий",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название вакансии",
                        "name": "title",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список вакансий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Job"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/jobs/{jobId}": {
            "get": {
                "description": "Возвращает вакансию по ее ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Получить вакансию по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID вакансии",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о вакансии",
                        "schema": {
                            "$ref": "#/definitions/model.Job"
                        }
                    },
                    "404": {
                        "description": "Вакансия не найдена",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные существующей вакансии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Обновить вакансию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID вакансии",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления вакансии",
                        "name": "updateJob",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно обновлено",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portfolios": {
            "post": {
                "description": "Создает новое портфолио",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Создать портфолио",
                "parameters": [
                    {
                        "description": "Данные портфолио",
                        "name": "portfolio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreatePortfolioRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешно создано",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portfolios/student/{studentId}": {
            "get": {
                "description": "Возвращает портфолио по ID студента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Получить портфолио студента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID студента",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Портфолио",
                        "schema": {
                            "$ref": "#/definitions/model.Portfolio"
                        }
                    },
                    "404": {
                        "description": "Портфолио не найдено",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portfolios/{portfolioId}/items": {
            "post": {
                "description": "Добавляет элементы в существующее портфолио",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Добавить элементы в портфолио",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID портфолио",
                        "name": "portfolioId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Список элементов портфолио",
                        "name": "items",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PortfolioItems"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Элементы добавлены",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assignments/submit": {
            "post": {
                "description": "Этот метод позволяет студентам отправлять задания для проверки.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Отправить задание",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Тема задания",
                        "name": "topic",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название задания",
                        "name": "assignment",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID курса",
                        "name": "course_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID преподавателя",
                        "name": "teacher_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл задания",
                        "name": "submission",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задание успешно отправлено",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сохранения задания",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "description": "Возвращает список всех доступных курсов.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Получить все курсы",
                "responses": {
                    "200": {
                        "description": "Список курсов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка получения курсов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Этот метод позволяет создавать курсы с заданными параметрами.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Создание нового курса",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название курса",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Описание курса",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "ID преподавателя",
                        "name": "teacher_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Дата начала курса (формат RFC3339)",
                        "name": "start_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Дата окончания курса (формат RFC3339)",
                        "name": "end_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JSON-строка с темами курса",
                        "name": "topics",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Курс успешно создан",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или отсутствуют обязательные поля",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сохранения курса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/courses/enroll": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Allows a student to enroll in a course.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Enroll in a course",
                "parameters": [
                    {
                        "description": "Enrollment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EnrollStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/courses/student/submissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all submissions for a given student based on their account ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Get submissions by student ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "description": "Возвращает курс, используя уникальный идентификатор.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Получить курс по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID курса",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные курса",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения курса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/submissions/evaluate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Allows a teacher to grade a student's submission.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Evaluate a student submission",
                "parameters": [
                    {
                        "description": "Evaluation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EvaluateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/submissions/teacher/{teacher_id}": {
            "get": {
                "description": "Возвращает список заданий, отправленных преподавателю.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Получить задания по ID преподавателя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID преподавателя",
                        "name": "teacher_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список заданий",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения заданий",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/submissions/{id}": {
            "get": {
                "description": "Возвращает задание, используя уникальный идентификатор.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Получить задание по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID задания",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные задания",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения задания",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Assignment": {
            "type": "object",
            "properties": {
                "additionalInfo": {
                    "type": "string"
                },
                "theoryFile": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Course": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Topic"
                    }
                }
            }
        },
        "model.Job": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employerId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Portfolio": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PortfolioItems"
                    }
                },
                "studentId": {
                    "type": "string"
                }
            }
        },
        "model.PortfolioItems": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Submission": {
            "type": "object",
            "properties": {
                "assignment": {
                    "type": "string"
                },
                "courseId": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "submission": {
                    "type": "string"
                },
                "submittedAt": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "model.Topic": {
            "type": "object",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Assignment"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "repository.JobFilters": {
            "type": "object",
            "properties": {
                "employerId": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "requests.CreateJobApplication": {
            "type": "object",
            "required": [
                "companyId",
                "status",
                "studentId"
            ],
            "properties": {
                "companyId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                }
            }
        },
        "requests.CreateJobRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "requests.CreatePortfolioRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PortfolioItems"
                    }
                },
                "studentId": {
                    "type": "string"
                }
            }
        },
        "requests.EnrollStudentRequest": {
            "type": "object",
            "required": [
                "course_id"
            ],
            "properties": {
                "course_id": {
                    "type": "string"
                }
            }
        },
        "requests.EvaluateStudentRequest": {
            "type": "object",
            "required": [
                "grade",
                "submission_id"
            ],
            "properties": {
                "grade": {
                    "type": "string",
                    "maxLength": 5,
                    "minLength": 2
                },
                "submission_id": {
                    "type": "string"
                }
            }
        },
        "requests.RefreshTokensRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "requests.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.SignOutRequest": {
            "type": "object"
        },
        "requests.SignUpRequest": {
            "type": "object",
            "required": [
                "bio",
                "email",
                "first_name",
                "password",
                "picture",
                "role",
                "surname"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateJobRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateRequest": {
            "type": "object",
            "required": [
                "bio",
                "email",
                "firstName",
                "picture",
                "surname"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "response.RefreshTokensResponse": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "response.SignInResponse": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "response.SignOutResponse": {
            "type": "object"
        },
        "response.SignUpResponse": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "response.SuccessResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.UpdateResponse": {
            "type": "object",
            "required": [
                "bio",
                "email",
                "firstName",
                "picture",
                "surname"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}