// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/refresh-tokens": {
            "post": {
                "description": "Обновление access и refresh токенов с использованием валидного refresh токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление Access и Refresh токенов",
                "parameters": [
                    {
                        "description": "RefreshTokens Request",
                        "name": "refreshTokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RefreshTokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Новые access и refresh токены",
                        "schema": {
                            "$ref": "#/definitions/response.RefreshTokensResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный refresh токен или ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-in": {
            "post": {
                "description": "Авторизация пользователя по email и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "signInRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens",
                        "schema": {
                            "$ref": "#/definitions/response.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-out": {
            "post": {
                "description": "Завершение сессии пользователя с аннулированием токенов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Выход пользователя",
                "parameters": [
                    {
                        "description": "Данные для выхода",
                        "name": "signOutRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пустой ответ при успешном завершении",
                        "schema": {
                            "$ref": "#/definitions/response.SignOutResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или неверные данные",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-up": {
            "post": {
                "description": "Создаёт нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "signUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens",
                        "schema": {
                            "$ref": "#/definitions/response.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/update-user": {
            "post": {
                "description": "Обновление пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновления пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления",
                        "name": "signInRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.RefreshTokensRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "requests.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.SignOutRequest": {
            "type": "object"
        },
        "requests.SignUpRequest": {
            "type": "object",
            "required": [
                "bio",
                "email",
                "firstName",
                "password",
                "picture",
                "role",
                "surname"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateRequest": {
            "type": "object",
            "required": [
                "bio",
                "email",
                "firstName",
                "picture",
                "surname"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "response.RefreshTokensResponse": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "response.SignInResponse": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "response.SignOutResponse": {
            "type": "object"
        },
        "response.SignUpResponse": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "response.UpdateResponse": {
            "type": "object",
            "required": [
                "bio",
                "email",
                "firstName",
                "picture",
                "surname"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
