definitions:
  model.Job:
    properties:
      createdAt:
        type: string
      description:
        type: string
      employerId:
        type: string
      id:
        type: string
      location:
        type: string
      title:
        type: string
    type: object
  repository.JobFilters:
    properties:
      employerId:
        type: string
      location:
        type: string
    type: object
  repository.UpdateJob:
    properties:
      description:
        type: string
      id:
        type: string
      location:
        type: string
      title:
        type: string
    type: object
  requests.CreateJobRequest:
    properties:
      description:
        type: string
      employerId:
        type: string
      id:
        type: string
      location:
        type: string
      title:
        type: string
    type: object
  requests.RefreshTokensRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  requests.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requests.SignOutRequest:
    type: object
  requests.SignUpRequest:
    properties:
      bio:
        type: string
      email:
        type: string
      firstName:
        type: string
      password:
        type: string
      picture:
        type: string
      role:
        type: string
      surname:
        type: string
    required:
    - bio
    - email
    - firstName
    - password
    - picture
    - role
    - surname
    type: object
  requests.UpdateRequest:
    properties:
      bio:
        type: string
      email:
        type: string
      firstName:
        type: string
      picture:
        type: string
      surname:
        type: string
    required:
    - bio
    - email
    - firstName
    - picture
    - surname
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    required:
    - error
    type: object
  response.RefreshTokensResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  response.SignInResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  response.SignOutResponse:
    type: object
  response.SignUpResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  response.SuccessResponse:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  response.UpdateResponse:
    properties:
      bio:
        type: string
      email:
        type: string
      firstName:
        type: string
      picture:
        type: string
      surname:
        type: string
    required:
    - bio
    - email
    - firstName
    - picture
    - surname
    type: object
info:
  contact: {}
paths:
  /api/auth/refresh-tokens:
    post:
      consumes:
      - application/json
      description: Обновление access и refresh токенов с использованием валидного
        refresh токена
      parameters:
      - description: RefreshTokens Request
        in: body
        name: refreshTokens
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshTokensRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Новые access и refresh токены
          schema:
            $ref: '#/definitions/response.RefreshTokensResponse'
        "400":
          description: Неверный refresh токен или ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновление Access и Refresh токенов
      tags:
      - auth
  /api/auth/sign-in:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя по email и паролю
      parameters:
      - description: Данные для входа
        in: body
        name: signInRequest
        required: true
        schema:
          $ref: '#/definitions/requests.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tokens
          schema:
            $ref: '#/definitions/response.SignInResponse'
        "400":
          description: Ошибка валидации или неверные учетные данные
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Вход пользователя
      tags:
      - auth
  /api/auth/sign-out:
    post:
      consumes:
      - application/json
      description: Завершение сессии пользователя с аннулированием токенов
      parameters:
      - description: Данные для выхода
        in: body
        name: signOutRequest
        required: true
        schema:
          $ref: '#/definitions/requests.SignOutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пустой ответ при успешном завершении
          schema:
            $ref: '#/definitions/response.SignOutResponse'
        "400":
          description: Ошибка валидации или неверные данные
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Выход пользователя
      tags:
      - auth
  /api/auth/sign-up:
    post:
      consumes:
      - application/json
      description: Создаёт нового пользователя
      parameters:
      - description: Данные для регистрации
        in: body
        name: signUpRequest
        required: true
        schema:
          $ref: '#/definitions/requests.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tokens
          schema:
            $ref: '#/definitions/response.SignUpResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - auth
  /api/auth/update-user:
    post:
      consumes:
      - application/json
      description: Обновление пользователя
      parameters:
      - description: Данные для обновления
        in: body
        name: signInRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tokens
          schema:
            $ref: '#/definitions/response.UpdateResponse'
        "400":
          description: Ошибка валидации или неверные учетные данные
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновления пользователя
      tags:
      - auth
  /api/jobs:
    post:
      consumes:
      - application/json
      description: Создает новую вакансию
      parameters:
      - description: Данные для создания вакансии
        in: body
        name: job
        required: true
        schema:
          $ref: '#/definitions/requests.CreateJobRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Успешно создано
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Создать вакансию
      tags:
      - jobs
  /api/jobs/{jobId}:
    get:
      consumes:
      - application/json
      description: Возвращает вакансию по ее ID
      parameters:
      - description: ID вакансии
        in: path
        name: jobId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о вакансии
          schema:
            $ref: '#/definitions/model.Job'
        "404":
          description: Вакансия не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получить вакансию по ID
      tags:
      - jobs
    put:
      consumes:
      - application/json
      description: Обновляет данные существующей вакансии
      parameters:
      - description: ID вакансии
        in: path
        name: jobId
        required: true
        type: string
      - description: Данные для обновления вакансии
        in: body
        name: updateJob
        required: true
        schema:
          $ref: '#/definitions/repository.UpdateJob'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно обновлено
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновить вакансию
      tags:
      - jobs
  /api/jobs/filter:
    post:
      consumes:
      - application/json
      description: Возвращает список вакансий, соответствующих заданным фильтрам
      parameters:
      - description: Фильтры вакансий
        in: body
        name: filters
        required: true
        schema:
          $ref: '#/definitions/repository.JobFilters'
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Количество записей на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список вакансий
          schema:
            items:
              $ref: '#/definitions/model.Job'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Фильтр вакансий
      tags:
      - jobs
  /api/jobs/search:
    get:
      consumes:
      - application/json
      description: Поиск вакансий по названию
      parameters:
      - description: Название вакансии
        in: query
        name: title
        required: true
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Количество записей на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список вакансий
          schema:
            items:
              $ref: '#/definitions/model.Job'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Поиск вакансий
      tags:
      - jobs
swagger: "2.0"
